{
  "swagger": "2.0",
  "info": {
    "title": "Maneja Tickets System API",
    "description": "An API for creating and managing support tickets.",
    "version": "1.0.0"
  },
  "host": "maneja-tickets.onrender.com",
  "basePath": "/",
  "tags": [
    "Tickets",
    "Users",
    "Google Users",
    "Resolution"
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "BasicAuth": {
      "type": "basic",
      "authorizationUrl": "https://maneja-tickets.onrender.com/auth/login",
      "flow": "implicit",
      "scopes": {
        "read": "Grants general read access",
        "write": "Grants general write access",
        "admin": "Grants access to admin operations"
      }
    },
    "GoogleOAuth": {
      "type": "oauth2",
      "authorizationUrl": "https://maneja-tickets.onrender.com/auth/google",
      "flow": "implicit",
      "scopes": {
        "read": "Grants general read access",
        "write": "Grants general write access",
        "admin": "Grants access to admin operations"
      }
    }
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login with an existing account.",
        "description": "Login with an existing user account, granting access to restricted API routes and endpoints for 1 hour or until logged out.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/create": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user account.",
        "description": "Creates and inserts a new user account into the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "username": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "jobPosition": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Log out of a currently logged-in account.",
        "description": "Log out of a currently logged-in account.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": [
          "Google Users"
        ],
        "summary": "Login with a Google Account.",
        "description": "Login with an existing user account, granting access to restricted API routes and endpoints for 1 hour or until logged out.",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/auth/google/redirect": {
      "get": {
        "tags": [
          "Google Users"
        ],
        "summary": "Callback route for Google.",
        "description": "After logging in with a Google account, this is the endpoint Google redirects to.",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/tickets/create-ticket": {
      "post": {
        "tags": [
          "Tickets"
        ],
        "summary": "Create a new ticket.",
        "description": "Creates and inserts a new ticket into the database using a list of fields and values.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The ticket object to be inserted.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TicketInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BasicAuth": [
              "write"
            ],
            "GoogleOAuth": [
              "write"
            ]
          }
        ]
      }
    },
    "/tickets/update-ticket/{id}": {
      "put": {
        "tags": [
          "Tickets"
        ],
        "summary": "Update a ticket.",
        "description": "Updates an existing ticket in the database, given a list of any number of fields and a new values for each.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the ticket to be updated.",
            "schema": {
              "$ref": "#/definitions/TicketId"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "Any number of fields of the ticket object to be updated, along with their new values.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TicketInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "Updated"
          },
          "400": {
            "description": "Invalid Ticket ID",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid ticket ID Supplied"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BasicAuth": [
              "write"
            ],
            "GoogleOAuth": [
              "write"
            ]
          }
        ]
      }
    },
    "/tickets/{id}": {
      "get": {
        "tags": [
          "Tickets"
        ],
        "summary": "Get a ticket by ID.",
        "description": "Retrieve a specified ticket from the database.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ticket object to be inserted.",
            "schema": {
              "$ref": "#/definitions/TicketId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid Ticket ID",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid ticket ID Supplied"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BasicAuth": [
              "read"
            ],
            "GoogleOAuth": [
              "read"
            ]
          }
        ]
      }
    },
    "/tickets/delete-ticket/{id}": {
      "delete": {
        "tags": [
          "Tickets"
        ],
        "summary": "Delete a ticket by ID.",
        "description": "Deletes a specified ticket from the database.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "All fields of a new ticket object to be inserted.",
            "schema": {
              "$ref": "#/definitions/TicketId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid Ticket ID",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid ticket ID Supplied"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BasicAuth": [
              "write"
            ],
            "GoogleOAuth": [
              "write"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "GoogleUsersId": {
      "type": "string",
      "example": "6553fd4495e95588a3921cfd"
    },
    "GoogleUserInput": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "MarcosAntunes"
        },
        "googleId": {
          "type": "string",
          "example": "106903543166470337016"
        }
      }
    },
    "GoogleUserOutput": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "object",
          "properties": {}
        },
        "username": {
          "type": "string",
          "example": "MarcosAntunes"
        },
        "googleId": {
          "type": "string",
          "example": "106903543166470337016"
        }
      }
    },
    "GoogleUserOutputArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GoogleUserOutput"
      }
    },
    "ResolutionId": {
      "type": "string",
      "example": "6553fd4495e95588a3921cfd"
    },
    "ResolutionInput": {
      "type": "object",
      "properties": {
        "ticketId": {
          "type": "object",
          "properties": {}
        },
        "ticketStatus": {
          "type": "string",
          "example": "Open"
        },
        "resolution": {
          "type": "string",
          "example": ""
        },
        "assignedEmployeeId": {
          "type": "object",
          "properties": {}
        }
      }
    },
    "ResolutionOutput": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "object",
          "properties": {}
        },
        "ticketId": {
          "type": "object",
          "properties": {}
        },
        "ticketStatus": {
          "type": "string",
          "example": "Open"
        },
        "resolution": {
          "type": "string",
          "example": ""
        },
        "assignedEmployeeId": {
          "type": "object",
          "properties": {}
        }
      }
    },
    "ResolutionOutputArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ResolutionOutput"
      }
    },
    "SessionId": {
      "type": "string",
      "example": "j86VFszYE5_NOCBsOBLCkkmjPqDK2bT8"
    },
    "SessionInput": {
      "type": "object",
      "properties": {
        "expires": {
          "type": "string",
          "example": "2023-11-29T16:50:32.232+00:00"
        },
        "session": {
          "type": "string",
          "example": "{\"cookie\":{\"originalMaxAge\":null,\"expires\":null,\"httpOnly\":true,\"path\":\"/\"}}"
        }
      }
    },
    "SessionOutput": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "j86VFszYE5_NOCBsOBLCkkmjPqDK2bT8"
        },
        "expires": {
          "type": "string",
          "example": "2023-11-29T16:50:32.232+00:00"
        },
        "session": {
          "type": "string",
          "example": "{\"cookie\":{\"originalMaxAge\":null,\"expires\":null,\"httpOnly\":true,\"path\":\"/\"}}"
        }
      }
    },
    "SessionOutputArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SessionOutput"
      }
    },
    "TicketId": {
      "type": "string",
      "example": "65592886744f7d0ebe92c28d"
    },
    "TicketInput": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "MarcosAntunes"
        },
        "email": {
          "type": "string",
          "example": "marcos@antunes.com"
        },
        "phoneNumber": {
          "type": "string",
          "example": "123-123-3333"
        },
        "jobPosition": {
          "type": "string",
          "example": "Web Backend Developer"
        },
        "ticketTitle": {
          "type": "string",
          "example": "Lost Database Access"
        },
        "ticketDescription": {
          "type": "string",
          "example": "The IP address of the new servers don't have access the database, which is essential for testing the new API."
        },
        "dateAndTime": {
          "type": "string",
          "example": "2023-11-18T00:00:00.000+00:00"
        },
        "priorityLevel": {
          "type": "string",
          "example": "High"
        }
      }
    },
    "TicketOuput": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "object",
          "properties": {}
        },
        "username": {
          "type": "string",
          "example": "MarcosAntunes"
        },
        "email": {
          "type": "string",
          "example": "marcos@antunes.com"
        },
        "phoneNumber": {
          "type": "string",
          "example": "123-123-3333"
        },
        "jobPosition": {
          "type": "string",
          "example": "Web Backend Developer"
        },
        "ticketTitle": {
          "type": "string",
          "example": "Lost Database Access"
        },
        "ticketDescription": {
          "type": "string",
          "example": "The IP address of the new servers don't have access the database, which is essential for testing the new API."
        },
        "dateAndTime": {
          "type": "string",
          "example": "2023-11-18T00:00:00.000+00:00"
        },
        "priorityLevel": {
          "type": "string",
          "example": "High"
        }
      }
    },
    "TicketOutputArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TicketOuput"
      }
    },
    "UserId": {
      "type": "string",
      "example": "6554f4f588e34040ea6a2085"
    },
    "UserInput": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "Marcos"
        },
        "lastName": {
          "type": "string",
          "example": "Antunes"
        },
        "username": {
          "type": "string",
          "example": "MarcosAntunes"
        },
        "email": {
          "type": "string",
          "example": "marcos@antunes.com"
        },
        "password": {
          "type": "string",
          "example": "$2a$10$VP1sVEWqrbU5p.ICZZO7I.qAXkkPpOXrWKxbNeqQiF5IHI58TdanD"
        },
        "jobPosition": {
          "type": "string",
          "example": "Web Backend Developer"
        }
      }
    },
    "UserOutput": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "object",
          "properties": {}
        },
        "firstName": {
          "type": "string",
          "example": "Marcos"
        },
        "lastName": {
          "type": "string",
          "example": "Antunes"
        },
        "username": {
          "type": "string",
          "example": "MarcosAntunes"
        },
        "email": {
          "type": "string",
          "example": "marcos@antunes.com"
        },
        "password": {
          "type": "string",
          "example": "$2a$10$VP1sVEWqrbU5p.ICZZO7I.qAXkkPpOXrWKxbNeqQiF5IHI58TdanD"
        },
        "jobPosition": {
          "type": "string",
          "example": "Web Backend Developer"
        }
      }
    },
    "UserOutputArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserOuput"
      }
    }
  }
}